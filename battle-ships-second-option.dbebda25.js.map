{"mappings":"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","sources":["src/js/battle-ships-second-option.js"],"sourcesContent":["import { showPlayAgainModal } from './play-again-modal';\n\nconst view = {\n  displayMessage: function (msg) {\n    const messageArea = document.getElementById('messageArea');\n    messageArea.innerHTML = msg;\n  },\n  displayHit: function (location) {\n    const cell = document.getElementById(location);\n    cell.classList.add('hit');\n  },\n  displayMiss: function (location) {\n    const cell = document.getElementById(location);\n    cell.classList.add('miss');\n  },\n  displaySunk: function (ship) {\n    if (model.isSunk(ship)) {\n      if (ship.locations.length === 1) {\n        const oneCellCounter = document.getElementById('one-cell-counter');\n        const currentCount = parseInt(oneCellCounter.textContent);\n        oneCellCounter.textContent = currentCount + 1;\n      } else if (ship.locations.length === 3) {\n        const threeCellCounter = document.getElementById('three-cell-counter');\n        const currentCount = parseInt(threeCellCounter.textContent);\n        threeCellCounter.textContent = currentCount + 1;\n      }\n    }\n  },\n};\n\nconst model = {\n  boardSize: 7,\n  numShips: 6,\n  shipsSunk: 0,\n  ships: [],\n\n  fire: function (guess) {\n    for (let i = 0; i < this.numShips; i++) {\n      const ship = this.ships[i];\n      const index = ship.locations.indexOf(guess);\n      if (index >= 0) {\n        ship.hits[index] = 'hit';\n        view.displayHit(guess);\n        view.displayMessage('HIT!');\n        view.displaySunk(ship);\n        if (this.isSunk(ship)) {\n          view.displayMessage('You sank my battleship!');\n          this.shipsSunk++;\n        }\n        return true;\n      }\n    }\n    view.displayMiss(guess);\n    view.displayMessage('You missed.');\n    return false;\n  },\n\n  isSunk: function (ship) {\n    return ship.hits.every(hit => hit === 'hit');\n  },\n\n  generateShipLocations: function () {\n    let locations;\n\n    for (let i = 0; i < 3; i++) {\n      do {\n        locations = this.generateShip(3);\n      } while (this.collision(locations));\n      this.ships.push({ locations, hits: Array(3).fill('') });\n    }\n\n    for (let i = 0; i < 3; i++) {\n      do {\n        locations = this.generateShip(1);\n      } while (this.collision(locations));\n      this.ships.push({ locations, hits: [''] });\n    }\n  },\n\n  generateShip: function (length) {\n    const direction = Math.floor(Math.random() * 2);\n    let row, col;\n\n    if (direction === 1) {\n      row = Math.floor(Math.random() * this.boardSize);\n      col = Math.floor(Math.random() * (this.boardSize - length + 1));\n    } else {\n      col = Math.floor(Math.random() * this.boardSize);\n      row = Math.floor(Math.random() * (this.boardSize - length + 1));\n    }\n\n    let newShipLocations = [];\n    for (let i = 0; i < length; i++) {\n      if (direction === 1) {\n        newShipLocations.push(row + '' + (col + i));\n      } else {\n        newShipLocations.push(row + i + '' + col);\n      }\n    }\n    return newShipLocations;\n  },\n\n  collision: function (locations) {\n    for (let i = 0; i < this.ships.length; i++) {\n      const ship = this.ships[i];\n      for (let j = 0; j < locations.length; j++) {\n        const adjacentLocations = this.getAdjacentLocations(locations[j]);\n        for (let k = 0; k < adjacentLocations.length; k++) {\n          if (ship.locations.indexOf(adjacentLocations[k]) >= 0) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  },\n\n  getAdjacentLocations: function (location) {\n    const [row, col] = location.split('').map(Number);\n    const adjacentLocations = [];\n\n    adjacentLocations.push(`${row - 1}${col}`);\n    adjacentLocations.push(`${row + 1}${col}`);\n    adjacentLocations.push(`${row}${col - 1}`);\n    adjacentLocations.push(`${row}${col + 1}`);\n\n    adjacentLocations.push(`${row - 1}${col - 1}`);\n    adjacentLocations.push(`${row - 1}${col + 1}`);\n    adjacentLocations.push(`${row + 1}${col - 1}`);\n    adjacentLocations.push(`${row + 1}${col + 1}`);\n\n    return adjacentLocations;\n  },\n};\n\nfunction handleCellClick(event) {\n  const cell = event.target;\n  const location = cell.id;\n  const hit = model.fire(location);\n  cell.removeEventListener('click', handleCellClick);\n\n  if (hit) {\n    if (model.shipsSunk === model.numShips) {\n      view.displayMessage('You sank all my battleships!');\n      cells.forEach(cell => {\n        cell.removeEventListener('click', handleCellClick);\n      });\n      // showPlayAgainModal();\n    }\n  }\n}\n\nconst cells = document.querySelectorAll('.board table td');\ncells.forEach(cell => {\n  cell.addEventListener('click', handleCellClick);\n});\n\nmodel.generateShipLocations();\n"],"names":["$c5b2a8be8d2a3dcc$var$view","msg","document","getElementById","innerHTML","location","classList","add","ship","$c5b2a8be8d2a3dcc$var$model","isSunk","locations","length","oneCellCounter","currentCount","parseInt","textContent","threeCellCounter","boardSize","numShips","shipsSunk","ships","fire","guess","i","this","index","indexOf","hits","every","hit","generateShipLocations","generateShip","collision","push","Array","fill","i1","direction","Math","floor","random","row","col","newShipLocations","j","adjacentLocations","getAdjacentLocations","k","split","map","Number","$c5b2a8be8d2a3dcc$var$handleCellClick","event","cell1","target","id","removeEventListener","$c5b2a8be8d2a3dcc$var$cells","forEach","cell","querySelectorAll","addEventListener"],"version":3,"file":"battle-ships-second-option.dbebda25.js.map"}