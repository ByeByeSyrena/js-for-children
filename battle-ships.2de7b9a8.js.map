{"mappings":"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","sources":["src/js/battle-ships.js"],"sourcesContent":["const view = {\n  displayMessage: function (msg) {\n    const messageArea = document.getElementById('messageArea');\n    messageArea.innerHTML = msg;\n  },\n  displayHit: function (location) {\n    const cell = document.getElementById(location);\n    cell.setAttribute('class', 'hit');\n  },\n  displayMiss: function (location) {\n    const cell = document.getElementById(location);\n    cell.setAttribute('class', 'miss');\n  },\n};\n\nconst model = {\n  boardSize: 7,\n  numShips: 3,\n  shipsSunk: 0,\n  shipLength: 3,\n  ships: [\n    { locations: [0, 0, 0], hits: ['', '', ''] },\n    { locations: [0, 0, 0], hits: ['', '', ''] },\n    { locations: [0, 0, 0], hits: ['', '', ''] },\n  ],\n  fire: function (guess) {\n    for (let i = 0; i < this.numShips; i++) {\n      const ship = this.ships[i];\n      const index = ship.locations.indexOf(guess);\n      if (index >= 0) {\n        ship.hits[index] = 'hit';\n        view.displayHit(guess);\n        view.displayMessage('HIT!');\n        if (this.isSunk(ship)) {\n          view.displayMessage('You sank my battleship!');\n          this.shipsSunk++;\n        }\n        return true;\n      }\n    }\n    view.displayMiss(guess);\n    view.displayMessage('You missed.');\n    return false;\n  },\n  isSunk: function (ship) {\n    for (let i = 0; i < this.shipLength; i++) {\n      if (ship.hits[i] !== 'hit') {\n        return false;\n      }\n    }\n    return true;\n  },\n  generateShipLocations: function () {\n    let locations;\n    for (let i = 0; i < this.numShips; i++) {\n      do {\n        locations = this.generateShip();\n      } while (this.collision(locations));\n      this.ships[i].locations = locations;\n    }\n  },\n  generateShip: function () {\n    const direction = Math.floor(Math.random() * 2);\n    let row, col;\n\n    if (direction === 1) {\n      row = Math.floor(Math.random() * this.boardSize);\n      col = Math.floor(Math.random() * (this.boardSize - this.shipLength + 1));\n    } else {\n      col = Math.floor(Math.random() * this.boardSize);\n      row = Math.floor(Math.random() * (this.boardSize - this.shipLength + 1));\n    }\n\n    let newShipLocations = [];\n    for (let i = 0; i < this.shipLength; i++) {\n      if (direction === 1) {\n        newShipLocations.push(row + '' + (col + i));\n      } else {\n        newShipLocations.push(row + i + '' + col);\n      }\n    }\n    return newShipLocations;\n  },\n\n  collision: function (locations) {\n    for (let i = 0; i < this.numShips; i++) {\n      const ship = model.ships[i];\n      for (let j = 0; j < locations.length; j++) {\n        if (ship.locations.indexOf(locations[j]) >= 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n};\n\nconst controller = {\n  guesses: 0,\n\n  processGuess: function (guess) {\n    const location = parseGuess(guess);\n    if (location) {\n      this.guesses++;\n      const hit = model.fire(location);\n      if (hit && model.shipsSunk === model.numShips) {\n        view.displayMessage(\n          'You sank all my battleships, in ' + this.guesses + ' guesses'\n        );\n      }\n    }\n  },\n};\n\nfunction parseGuess(guess) {\n  const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n\n  if (guess === null || guess.length !== 2) {\n    alert('Oops, please enter a letter and a number on the board.');\n  } else {\n    const firstChar = guess.charAt(0).toUpperCase();\n    const row = alphabet.indexOf(firstChar);\n    const column = guess.charAt(1);\n\n    if (isNaN(row) || isNaN(column)) {\n      alert(\"Oops, that isn't on the board.\");\n    } else if (row < 0 || row >= model.boardSize || column >= model.boardSize) {\n      alert(\"Oops, that's off the board!\");\n    } else {\n      return row + column;\n    }\n  }\n  return null;\n}\n\nfunction init() {\n  const fireButton = document.getElementById('fireButton');\n  fireButton.onclick = handleFireButton;\n  model.generateShipLocations();\n}\n\nfunction handleFireButton() {\n  const guessInput = document.getElementById('guessInput');\n  const guess = guessInput.value;\n  controller.processGuess(guess);\n  guessInput.value = '';\n}\n\nfunction handleKeyPress(event) {\n  if (event.key === 'Enter') {\n    event.preventDefault();\n    handleFireButton();\n  }\n}\n\nfunction init() {\n  const fireButton = document.getElementById('fireButton');\n  const guessInput = document.getElementById('guessInput');\n  fireButton.onclick = handleFireButton;\n\n  guessInput.addEventListener('keypress', handleKeyPress);\n\n  model.generateShipLocations();\n}\n\nwindow.onload = init;\n"],"names":["$0ad763e13bd9bb1f$var$view","msg","document","getElementById","innerHTML","location","setAttribute","$0ad763e13bd9bb1f$var$model","boardSize","numShips","shipsSunk","shipLength","ships","locations","hits","fire","guess","i","this","ship","index","indexOf","isSunk","generateShipLocations","generateShip","collision","direction","Math","floor","random","row","col","newShipLocations","push","j","length","$0ad763e13bd9bb1f$var$controller","guesses","processGuess","alphabet","alert","firstChar","charAt","toUpperCase","column","isNaN","$0ad763e13bd9bb1f$var$parseGuess","$0ad763e13bd9bb1f$var$handleFireButton","guessInput","value","$0ad763e13bd9bb1f$var$handleKeyPress","event","key","preventDefault","window","onload","fireButton","onclick","addEventListener"],"version":3,"file":"battle-ships.2de7b9a8.js.map"}