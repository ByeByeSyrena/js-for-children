{"mappings":"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","sources":["src/js/battle-ships-second-option.js"],"sourcesContent":["const view = {\n  displayMessage: function (msg) {\n    const messageArea = document.getElementById('messageArea');\n    messageArea.innerHTML = msg;\n  },\n  displayHit: function (location) {\n    const cell = document.getElementById(location);\n    cell.classList.add('hit');\n  },\n  displayMiss: function (location) {\n    const cell = document.getElementById(location);\n    cell.classList.add('miss');\n  },\n};\n\nconst model = {\n  boardSize: 7,\n  numShips: 3,\n  shipsSunk: 0,\n  shipLength: 3,\n  ships: [\n    { locations: [0, 0, 0], hits: ['', '', ''] },\n    { locations: [0, 0, 0], hits: ['', '', ''] },\n    { locations: [0, 0, 0], hits: ['', '', ''] },\n  ],\n  fire: function (guess) {\n    for (let i = 0; i < this.numShips; i++) {\n      const ship = this.ships[i];\n      const index = ship.locations.indexOf(guess);\n      if (index >= 0) {\n        ship.hits[index] = 'hit';\n        view.displayHit(guess);\n        view.displayMessage('HIT!');\n        if (this.isSunk(ship)) {\n          view.displayMessage('You sank my battleship!');\n          this.shipsSunk++;\n        }\n        return true;\n      }\n    }\n    view.displayMiss(guess);\n    view.displayMessage('You missed.');\n    return false;\n  },\n  isSunk: function (ship) {\n    for (let i = 0; i < this.shipLength; i++) {\n      if (ship.hits[i] !== 'hit') {\n        return false;\n      }\n    }\n    return true;\n  },\n  generateShipLocations: function () {\n    let locations;\n    for (let i = 0; i < this.numShips; i++) {\n      do {\n        locations = this.generateShip();\n      } while (this.collision(locations));\n      this.ships[i].locations = locations;\n    }\n  },\n  generateShip: function () {\n    const direction = Math.floor(Math.random() * 2);\n    let row, col;\n\n    if (direction === 1) {\n      row = Math.floor(Math.random() * this.boardSize);\n      col = Math.floor(Math.random() * (this.boardSize - this.shipLength + 1));\n    } else {\n      col = Math.floor(Math.random() * this.boardSize);\n      row = Math.floor(Math.random() * (this.boardSize - this.shipLength + 1));\n    }\n\n    let newShipLocations = [];\n    for (let i = 0; i < this.shipLength; i++) {\n      if (direction === 1) {\n        newShipLocations.push(row + '' + (col + i));\n      } else {\n        newShipLocations.push(row + i + '' + col);\n      }\n    }\n    return newShipLocations;\n  },\n  collision: function (locations) {\n    for (let i = 0; i < this.numShips; i++) {\n      const ship = model.ships[i];\n      for (let j = 0; j < locations.length; j++) {\n        const adjacentLocations = this.getAdjacentLocations(locations[j]);\n        for (let k = 0; k < adjacentLocations.length; k++) {\n          if (ship.locations.indexOf(adjacentLocations[k]) >= 0) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  },\n\n  getAdjacentLocations: function (location) {\n    const [row, col] = location.split('').map(Number);\n    const adjacentLocations = [];\n\n    adjacentLocations.push(`${row - 1}${col}`);\n    adjacentLocations.push(`${row + 1}${col}`);\n    adjacentLocations.push(`${row}${col - 1}`);\n    adjacentLocations.push(`${row}${col + 1}`);\n\n    adjacentLocations.push(`${row - 1}${col - 1}`);\n    adjacentLocations.push(`${row - 1}${col + 1}`);\n    adjacentLocations.push(`${row + 1}${col - 1}`);\n    adjacentLocations.push(`${row + 1}${col + 1}`);\n\n    return adjacentLocations;\n  },\n};\n\nfunction handleCellClick(event) {\n  const cell = event.target;\n  const location = cell.id;\n  const hit = model.fire(location);\n  cell.removeEventListener('click', handleCellClick);\n  if (hit && model.shipsSunk === model.numShips) {\n    view.displayMessage('You sank all my battleships!');\n  }\n}\n\nconst cells = document.querySelectorAll('.board table td');\ncells.forEach(cell => {\n  cell.addEventListener('click', handleCellClick);\n});\n\nmodel.generateShipLocations();\n"],"names":["$c5b2a8be8d2a3dcc$var$view","msg","document","getElementById","innerHTML","location","classList","add","$c5b2a8be8d2a3dcc$var$model","boardSize","numShips","shipsSunk","shipLength","ships","locations","hits","fire","guess","i","this","ship","index","indexOf","isSunk","generateShipLocations","generateShip","collision","direction","Math","floor","random","row","col","newShipLocations","push","j","length","adjacentLocations","getAdjacentLocations","k","split","map","Number","$c5b2a8be8d2a3dcc$var$handleCellClick","event","cell","target","id","hit","removeEventListener","querySelectorAll","forEach","addEventListener"],"version":3,"file":"battle-ships-second-option.3264ef74.js.map"}