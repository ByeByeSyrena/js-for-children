{"mappings":"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","sources":["src/js/test-task-xy.js"],"sourcesContent":["function generateRandomNumbers() {\n  const numbers = [];\n  for (let i = 0; i < 4; i++) {\n    const randomNumber = Math.floor(Math.random() * 10);\n    numbers.push(randomNumber);\n  }\n  const id = numbers.join('');\n  return id;\n}\n\nconst input = document.getElementById('user-input');\nconst text = document.getElementById('user-output');\nconst ok = document.getElementById('ok-button');\nconst bigZone = document.body;\n\nlet isMouseDown = false;\nlet selectionStartIndex = -1;\nlet selectionEndIndex = -1;\nlet dataToDrag = [];\n\ntext.addEventListener('mousedown', handleMouseDown);\ndocument.addEventListener('mouseup', handleMouseUp);\ntext.addEventListener('mousemove', handleMouseMove);\ntext.addEventListener('click', handleClick);\n\nfunction handleMouseDown(event) {\n  isMouseDown = true;\n  const startX = event.clientX;\n  const startY = event.clientY;\n  const spans = Array.from(text.children);\n  selectionStartIndex = -1;\n  selectionEndIndex = -1;\n\n  spans.forEach((span, index) => {\n    const rect = span.getBoundingClientRect();\n    if (\n      startX >= rect.left &&\n      startX <= rect.right &&\n      startY >= rect.top &&\n      startY <= rect.bottom\n    ) {\n      selectionStartIndex = index;\n      selectionEndIndex = index;\n      toggleSelection(span);\n    }\n  });\n}\n\nfunction handleMouseMove(event) {\n  if (isMouseDown) {\n    const mouseX = event.clientX;\n    const mouseY = event.clientY;\n    const spans = Array.from(text.children);\n    selectionEndIndex = -1;\n\n    spans.forEach((span, index) => {\n      const rect = span.getBoundingClientRect();\n      if (\n        mouseX >= rect.left &&\n        mouseX <= rect.right &&\n        mouseY >= rect.top &&\n        mouseY <= rect.bottom\n      ) {\n        selectionEndIndex = index;\n        toggleSelection(span);\n      }\n    });\n  }\n}\n\nfunction handleMouseUp(event) {\n  isMouseDown = false;\n  createCombinedSpan();\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName.toLowerCase() === 'span') {\n    if (!event.ctrlKey) {\n      clearSelection();\n    }\n    toggleSelection(target);\n  }\n}\n\nfunction toggleSelection(span) {\n  if (span.classList.contains('selected')) {\n    span.classList.remove('selected');\n  } else {\n    span.classList.add('selected');\n  }\n}\n\nfunction createCombinedSpan() {\n  const selectedSpans = text.querySelectorAll('.selected');\n\n  if (selectedSpans.length === 0) {\n    return;\n  }\n\n  const combinedSpan = document.createElement('span');\n  combinedSpan.setAttribute('draggable', 'true');\n  combinedSpan.setAttribute('id', generateRandomNumbers());\n  combinedSpan.classList.add('combined-item');\n\n  const firstSelectedSpan = selectedSpans[0];\n  const parentElement = firstSelectedSpan.parentNode;\n\n  parentElement.insertBefore(combinedSpan, firstSelectedSpan);\n\n  selectedSpans.forEach(span => {\n    combinedSpan.textContent += span.textContent;\n    span.parentNode.removeChild(span);\n  });\n\n  clearSelection();\n\n  combinedSpan.addEventListener('dragstart', event => {\n    event.dataTransfer.setData('text/plain', combinedSpan.id);\n  });\n\n  combinedSpan.addEventListener('dragend', event => {\n    event.target.style.opacity = '';\n  });\n}\n\nfunction clearSelection() {\n  const selectedSpans = text.querySelectorAll('.selected');\n  selectedSpans.forEach(span => {\n    span.classList.remove('selected');\n  });\n}\n\nok.addEventListener('click', () => {\n  const inputValue = input.value;\n\n  inputValue.split('').forEach(letter => {\n    const span = document.createElement('span');\n    span.setAttribute('draggable', 'true');\n    span.setAttribute('id', generateRandomNumbers());\n    span.classList.add('item');\n    span.textContent = letter;\n    text.appendChild(span);\n\n    span.addEventListener('dragstart', event => {\n      event.dataTransfer.setData('text/plain', event.target.id);\n    });\n\n    span.addEventListener('dragend', event => {\n      event.target.style.opacity = '';\n    });\n  });\n});\n\nfunction allowDrop(event) {\n  event.preventDefault();\n}\n\ntext.ondragover = allowDrop;\nbigZone.ondragover = allowDrop;\n\ntext.ondrop = drop;\nbigZone.ondrop = dropOnTheBody;\n\nfunction drop(event) {\n  event.preventDefault();\n  let itemId = event.dataTransfer.getData('text/plain');\n  let draggedElement = document.getElementById(itemId);\n  let target = event.target.closest('.item');\n\n  if (draggedElement) {\n    if (target) {\n      if (\n        event.clientY <\n        target.getBoundingClientRect().top + target.offsetHeight / 2\n      ) {\n        target.parentNode.insertBefore(draggedElement, target);\n      } else {\n        target.parentNode.insertBefore(draggedElement, target.nextSibling);\n      }\n    } else {\n      text.appendChild(draggedElement);\n    }\n\n    draggedElement.style.position = '';\n    draggedElement.style.left = '';\n    draggedElement.style.top = '';\n  }\n}\n\nfunction dropOnTheBody(event) {\n  if (event.target === text || text.contains(event.target)) {\n    return;\n  }\n\n  event.preventDefault();\n  let itemId = event.dataTransfer.getData('text/plain');\n  let draggedElement = document.getElementById(itemId);\n\n  if (!draggedElement) {\n    console.error('Error: Dragged element not found.');\n    return;\n  }\n\n  if (!bigZone.contains(draggedElement)) {\n    console.error('Error: Dragged element is not in the expected container.');\n    return;\n  }\n\n  draggedElement.style.position = 'absolute';\n  draggedElement.style.left = event.clientX + 'px';\n  draggedElement.style.top = event.clientY + 'px';\n\n  bigZone.appendChild(draggedElement);\n}\n"],"names":["$28ffa27fb90f580a$var$generateRandomNumbers","numbers","i","randomNumber","Math","floor","random","push","join","$28ffa27fb90f580a$var$input","document","getElementById","$28ffa27fb90f580a$var$text","$28ffa27fb90f580a$var$ok","$28ffa27fb90f580a$var$bigZone","body","$28ffa27fb90f580a$var$isMouseDown","$28ffa27fb90f580a$var$toggleSelection","span","classList","contains","remove","add","$28ffa27fb90f580a$var$clearSelection","querySelectorAll","forEach","$28ffa27fb90f580a$var$allowDrop","event","preventDefault","addEventListener","startX","clientX","startY","clientY","spans","Array","from","children","index","rect","getBoundingClientRect","left","right","top","bottom","selectedSpans","length","combinedSpan","createElement","setAttribute","firstSelectedSpan","parentNode","insertBefore","textContent","removeChild","dataTransfer","setData","id","target","style","opacity","$28ffa27fb90f580a$var$createCombinedSpan","mouseX","mouseY","tagName","toLowerCase","ctrlKey","value","split","letter","appendChild","ondragover","ondrop","itemId","getData","draggedElement","closest","offsetHeight","nextSibling","position","console","error"],"version":3,"file":"test-task-xy.b1d368f6.js.map"}