{"mappings":"YAAA,IAAMA,EACc,SAAUC,GACFC,SAASC,eAAe,eAChCC,UAAYH,C,EAH1BD,EAKU,SAAUK,GACLH,SAASC,eAAeE,GAChCC,aAAa,QAAS,M,EAP7BN,EASW,SAAUK,GACNH,SAASC,eAAeE,GAChCC,aAAa,QAAS,O,EAI7BC,EAAQ,CACVC,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,WAAY,EACZC,MAAO,CACH,CAAEC,UAAW,CAAC,KAAM,KAAM,MAAOC,KAAM,CAAC,GAAI,GAAI,KAChD,CAAED,UAAW,CAAC,KAAM,KAAM,MAAOC,KAAM,CAAC,GAAI,GAAI,KAChD,CAAED,UAAW,CAAC,KAAM,KAAM,MAAOC,KAAM,CAAC,GAAI,GAAI,MAEpDC,KAAM,SAAUC,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKT,SAAUQ,IAAK,CACpC,IAAME,EAAOD,KAAKN,MAAMK,GAClBG,EAAQD,EAAKN,UAAUQ,QAAQL,GACrC,GAAII,GAAS,EAQT,OAPAD,EAAKL,KAAKM,GAAS,MACnBpB,EAAgBgB,GAChBhB,EAAoB,QAChBkB,KAAKI,OAAOH,KACZnB,EAAoB,2BACpBkB,KAAKR,cAEF,C,CAKf,OAFAV,EAAiBgB,GACjBhB,EAAoB,gBACb,C,EAEXsB,OAAQ,SAAUH,GACd,IAAK,IAAIF,EAAI,EAAGA,EAAIC,KAAKP,WAAYM,IACjC,GAAqB,QAAjBE,EAAKL,KAAKG,GACV,OAAO,EAGf,OAAO,C,GAITM,EAAa,CACfC,QAAS,EAETC,aAAc,SAAUT,GACpB,IAAMX,EAWd,SAAoBW,GAChB,IAAMU,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEhD,GAAc,OAAVV,GAAmC,IAAjBA,EAAMW,OACxBC,MAAM,8DACH,CACH,IAAMC,EAAYb,EAAMc,OAAO,GAAGC,cAC5BC,EAAMN,EAASL,QAAQQ,GACvBI,EAASjB,EAAMc,OAAO,GAE5B,GAAII,MAAMF,IAAQE,MAAMD,GACpBL,MAAM,sCACH,MAAII,EAAM,GAAKA,GAAOzB,EAAMC,WAAayB,GAAU1B,EAAMC,WAG5D,OAAOwB,EAAMC,EAFbL,MAAM,8BAEa,C,CAG3B,OAAO,I,CA7BcO,CAAWnB,GACxBX,IACAa,KAAKM,UACOjB,EAAMQ,KAAKV,IACZE,EAAMG,YAAcH,EAAME,UACjCT,EAAoB,mCAAqCkB,KAAKM,QAAU,Y,GAyCxFD,EAAWE,aAAa,MACxBF,EAAWE,aAAa,MAExBF,EAAWE,aAAa,MAExBF,EAAWE,aAAa,MAExBF,EAAWE,aAAa,MAExBF,EAAWE,aAAa,K","sources":["src/js/battle-ships.js"],"sourcesContent":["const view = {\n    displayMessage: function (msg) {\n        const messageArea = document.getElementById(\"messageArea\");\n        messageArea.innerHTML = msg;\n    },\n    displayHit: function (location) {\n        const cell = document.getElementById(location);\n        cell.setAttribute(\"class\", \"hit\");\n    },\n    displayMiss: function (location) {\n        const cell = document.getElementById(location);\n        cell.setAttribute(\"class\", \"miss\");\n    },\n};\n\nconst model = {\n    boardSize: 7,\n    numShips: 3,\n    shipsSunk: 0,\n    shipLength: 3,\n    ships: [\n        { locations: [\"06\", \"16\", \"26\"], hits: [\"\", \"\", \"\"] },\n        { locations: [\"24\", \"34\", \"44\"], hits: [\"\", \"\", \"\"] },\n        { locations: [\"10\", \"11\", \"12\"], hits: [\"\", \"\", \"\"] },\n    ],\n    fire: function (guess) {\n        for (let i = 0; i < this.numShips; i++) {\n            const ship = this.ships[i];\n            const index = ship.locations.indexOf(guess);\n            if (index >= 0) {\n                ship.hits[index] = \"hit\";\n                view.displayHit(guess);\n                view.displayMessage(\"HIT!\");\n                if (this.isSunk(ship)) {\n                    view.displayMessage(\"You sank my battleship!\");\n                    this.shipsSunk++;\n                }\n                return true;\n            }\n        }\n        view.displayMiss(guess);\n        view.displayMessage(\"You missed.\");\n        return false;\n    },\n    isSunk: function (ship) {\n        for (let i = 0; i < this.shipLength; i++) {\n            if (ship.hits[i] !== \"hit\") {\n                return false;\n            }\n        }\n        return true;\n    },\n};\n\nconst controller = {\n    guesses: 0,\n\n    processGuess: function (guess) {\n        const location = parseGuess(guess);\n        if (location) {\n            this.guesses++;\n            const hit = model.fire(location);\n            if (hit && model.shipsSunk === model.numShips) {\n                view.displayMessage(\"You sank all my battleships, in \" + this.guesses + \" guesses\");\n            }\n        }\n    },\n};\n\nfunction parseGuess(guess) {\n    const alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"];\n\n    if (guess === null || guess.length !== 2) {\n        alert(\"Oops, please enter a letter and a number on the board.\");\n    } else {\n        const firstChar = guess.charAt(0).toUpperCase();\n        const row = alphabet.indexOf(firstChar);\n        const column = guess.charAt(1);\n\n        if (isNaN(row) || isNaN(column)) {\n            alert(\"Oops, that isn't on the board.\");\n        } else if (row < 0 || row >= model.boardSize || column >= model.boardSize) {\n            alert(\"Oops, that's off the board!\");\n        } else {\n            return row + column;\n        }\n    }\n    return null;\n}\n\n// function handleFireButton() {\n//     const guessInput = document.getElementById(\"guessInput\");\n//     const guess = guessInput.value;\n//     controller.processGuess(guess);\n//     guessInput.value = \"\";\n// }\n\n// function init() {\n//     const fireButton = document.getElementById(\"fireButton\");\n//     fireButton.addEventListener(\"click\", handleFireButton);\n// }\n\n// window.onload = init;\n\ncontroller.processGuess(\"A6\");\ncontroller.processGuess(\"B6\");\n\ncontroller.processGuess(\"C6\");\n\ncontroller.processGuess(\"C4\");\n\ncontroller.processGuess(\"D4\");\n\ncontroller.processGuess(\"E4\");\n\n"],"names":["$e151ea427b3ec2dd$var$view","msg","document","getElementById","innerHTML","location","setAttribute","$e151ea427b3ec2dd$var$model","boardSize","numShips","shipsSunk","shipLength","ships","locations","hits","fire","guess","i","this","ship","index","indexOf","isSunk","$e151ea427b3ec2dd$var$controller","guesses","processGuess","alphabet","length","alert","firstChar","charAt","toUpperCase","row","column","isNaN","$e151ea427b3ec2dd$var$parseGuess"],"version":3,"file":"battle-ships.eb18be9b.js.map"}